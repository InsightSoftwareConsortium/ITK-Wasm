name: Documentation

on:
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  OCI_EXE: docker

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-main-documentation:
    runs-on: ubuntu-24.04

    steps:
    - uses: actions/checkout@v4.2.2

    - name: Set up Python
      uses: actions/setup-python@v5.4.0
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r docs/requirements.txt

    - name: Build documentation
      run: |
        export SPHINX_BASE_URL="/ITK-Wasm/"
        cd docs/
        make html

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: main-documentation
        path: docs/_build/html

  build-package-documentation:
    runs-on: ubuntu-24.04

    steps:
    - uses: actions/checkout@v4.2.2

    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@main
      with:
        tool-cache: true

    - name: Pull latest Docker images
      run: |
        ./src/docker/pull.sh --no-debug

    - uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install
      uses: pnpm/action-setup@v4
      with:
        run_install: true

    - name: Build ITK-Wasm
      run: |
        pnpm build

    - name: Build package typescript documentation
      run: |
        for package in compare-images compress-stringify dicom downsample image-io mesh-filters mesh-io transform-io; do
          mkdir -p docs/$package/ts/docs
          mkdir -p docs/$package/ts/app

          sed "s%      basePath:.*%      basePath: '/ITK-Wasm/$package/ts/docs',%" packages/$package/typescript/index.html > docs/$package/ts/docs/index.html
          cp packages/$package/typescript/README.md docs/$package/ts/docs/
          mkdir -p docs/$package/ts/docs/test/browser/demo-app
          cp packages/$package/typescript/test/browser/demo-app/logo.svg docs/$package/ts/docs/test/browser/demo-app/

          pushd packages/$package/typescript
          rm -rf demo-app node_modules/.vite
          export VITE_BASE_URL="/ITK-Wasm/$package/ts/app/"
          pnpm build
          popd
          rsync -a packages/$package/typescript/demo-app/ docs/$package/ts/app/
        done

    - name: Set up Python
      uses: actions/setup-python@v5.4.0
      with:
        python-version: '3.11'

    - name: Build package python documentation
      run: |
        for package in compare-images compress-stringify dicom downsample image-io mesh-filters mesh-io transform-io; do
          mkdir -p docs/$package/py/docs
          mkdir -p docs/$package/py/app

          export SPHINX_BASE_URL="/ITK-Wasm/$package/py/docs/"
          pushd packages/$package/python/*$package/docs
          pip install -r requirements.txt
          make html
          popd
          rsync -a packages/$package/python/*$package/docs/_build/html/ docs/$package/py/docs/
        done

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: package-documentation
        path: docs

  consolidate-documentation:
    needs: [build-main-documentation, build-package-documentation]
    runs-on: ubuntu-24.04

    steps:
    - name: Download main documentation
      uses: actions/download-artifact@v4
      with:
        name: main-documentation
        path: docs

    - name: Download package documentation
      uses: actions/download-artifact@v4
      with:
        name: package-documentation
        path: docs

    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: docs
        retention-days: 7

  deploy-gh-pages:
    needs: consolidate-documentation
    runs-on: ubuntu-24.04

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      contents: read
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      # with:
        # preview: true <-> currently not available to the public
